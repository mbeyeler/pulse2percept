name: build_wheels

on: [push, pull_request]

# By default, jobs run in parallel on a fresh instance of the virtual
# environment. You can force sequential order by specifying a job's
# dependencies with the "needs" attribute.
jobs: 

  # Build wheels for all supported platforms and upload the generated
  # artifacts to GitHub:
  build_wheels:
    name: Building on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      # Test on all supported platforms using all supported Python versions:
      matrix:
        python-version: [3.5]
        os: [ubuntu-18.04, windows-latest, macOS-latest]
    env:
      # Skip building on Python 2.7 on all platforms
      CIBW_SKIP: cp27-*
      # Install p2p in Docker container
      install_p2p: "pip install -r requirements.txt && pip install -e ."
      CIBW_BEFORE_BUILD: $(install_p2p)
      # On Linux, need to install Matplotlib depedencies in Docker container:
      CIBW_BEFORE_BUILD_LINUX: "yum -y install freetype-devel pkg-config libpng-devel && $(install_p2p)"
    
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel setuptools
        # Install p2p requirements:
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 pulse2percept --ignore N802,N806,W504 --select W503 --count --show-source --statistics
    - name: Install package (Windows)
      # https://github.com/pandas-dev/pandas/issues/981
      if: matrix.os == 'windows-latest'
      run: |
        $env:INCLUDE = 'C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\ucrt'
        $env:INCLUDE += ';C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\shared'
        $env:INCLUDE += ';C:\Program Files (x86)\Windows Kits\10\Include\10.0.16299.0\um'
        $env:LIB = 'C:\Program Files (x86)\Windows Kits\10\Lib\10.0.16299.0\ucrt\x64'
        $env:LIB += ';C:\Program Files (x86)\Windows Kits\10\Lib\10.0.16299.0\um\x64'
        $env:PATH += ';C:\Program Files (x86)\Windows Kits\10\bin\10.0.16299.0\x64'
    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel==1.4.1
    - name: Build wheel
      run: |
        python -m cibuildwheel --output-dir wheelhouse
    - uses: actions/upload-artifact@v1
      with:
        name: wheels
        path: ./wheelhouse
